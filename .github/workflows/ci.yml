name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Global permissions for the workflow
permissions:
  contents: read
  actions: read
  checks: write
  issues: write
  pull-requests: write
  security-events: write

env:
  NODE_VERSION: '22'
  XCODE_VERSION: '16.2'

jobs:
  # Node.js Server Tests and Linting
  server:
    name: Server Tests & Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    timeout-minutes: 15
    
    defaults:
      run:
        working-directory: ./server
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Check code formatting
      run: npm run format:check
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: server-coverage
        path: server/coverage/
    
    - name: Security audit
      run: npm audit --audit-level=high
      continue-on-error: true

  # iOS App Build and Tests
  ios:
    name: iOS Build & Test
    permissions:
      contents: read
      checks: write
    runs-on: macos-15
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Run SwiftLint
      run: |
        cd ios
        swiftlint lint --strict --reporter github-actions-logging
    
    - name: Resolve Swift Package Dependencies
      run: |
        cd ios
        xcodebuild -resolvePackageDependencies -project AICLICompanion.xcodeproj -scheme AICLICompanionApp
    
    - name: Build iOS App
      run: |
        cd ios
        xcodebuild -project AICLICompanion.xcodeproj -scheme AICLICompanionApp -destination 'platform=iOS Simulator,name=iPhone 16 Pro' build CODE_SIGNING_ALLOWED=NO
    
    - name: Run iOS Tests with Coverage
      run: |
        cd ios
        xcodebuild -scheme AICLICompanion -destination 'platform=iOS Simulator,name=iPhone 16 Pro' test -enableCodeCoverage YES CODE_SIGNING_ALLOWED=NO -resultBundlePath ios-test.xcresult
    
    - name: Generate iOS Coverage Report
      run: |
        cd ios
        xcrun xccov view --report --json ios-test.xcresult > ios-coverage.json || true
        xcrun xccov view --report ios-test.xcresult > ios-coverage.txt || true
    
    - name: Upload iOS Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: ios-coverage
        path: |
          ios/ios-coverage.json
          ios/ios-coverage.txt
      if: always()
    
    - name: Build for Release
      run: |
        cd ios
        xcodebuild -project AICLICompanion.xcodeproj -scheme AICLICompanionApp -configuration Release -destination 'generic/platform=iOS' -archivePath build/AICLICompanion.xcarchive archive CODE_SIGNING_ALLOWED=NO
      continue-on-error: true

  # macOS App Build and Tests
  macos:
    name: macOS Build & Test
    permissions:
      contents: read
      checks: write
    runs-on: macos-15
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app
    
    - name: Install XcodeGen
      run: brew install xcodegen
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Generate Xcode Project
      run: |
        cd macos-app
        xcodegen generate
    
    - name: Run SwiftLint
      run: |
        cd macos-app
        swiftlint lint --strict --reporter github-actions-logging
    
    - name: Build macOS App
      run: |
        cd macos-app
        xcodebuild -project ClaudeCompanionHost.xcodeproj -scheme ClaudeCompanionHost -destination 'platform=macOS' build CODE_SIGNING_ALLOWED=NO
    
    - name: Run macOS Tests with Coverage
      run: |
        cd macos-app
        xcodebuild -project ClaudeCompanionHost.xcodeproj -scheme ClaudeCompanionHost -destination 'platform=macOS' test -enableCodeCoverage YES CODE_SIGNING_ALLOWED=NO -resultBundlePath macos-test.xcresult
    
    - name: Generate macOS Coverage Report
      run: |
        cd macos-app
        xcrun xccov view --report --json macos-test.xcresult > macos-coverage.json || true
        xcrun xccov view --report macos-test.xcresult > macos-coverage.txt || true
    
    - name: Upload macOS Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: macos-coverage
        path: |
          macos-app/macos-coverage.json
          macos-app/macos-coverage.txt
      if: always()
    
    - name: Build for Release
      run: |
        cd macos-app
        xcodebuild -project ClaudeCompanionHost.xcodeproj -scheme ClaudeCompanionHost -configuration Release -destination 'platform=macOS' build CODE_SIGNING_ALLOWED=NO
      continue-on-error: true

  # Code Quality Report
  quality:
    name: Code Quality Report
    permissions:
      contents: read
      issues: write
      pull-requests: write
      security-events: write
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [server, ios, macos]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      continue-on-error: true
