{
  "permissions": {
    "allow": [
      "Bash(claude --version)",
      "Bash(xcode-select:*)",
      "Bash(node:*)",
      "Bash(claude -p \"test\" --output-format json)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(npm install:*)",
      "Bash(claude -p \"Hello, can you tell me what directory I''m in?\" --output-format json)",
      "Bash(timeout 10s npm start)",
      "Bash(pkill:*)",
      "Bash(true)",
      "WebFetch(domain:github.com)",
      "Bash(killall:*)",
      "Bash(curl:*)",
      "Bash(grep:*)",
      "Bash(claude --output-format json \"What is 2+2?\")",
      "Bash(kill:*)",
      "Bash(claude --print --output-format json \"What is 2+2?\")",
      "Bash(timeout:*)",
      "Bash(npx husky:*)",
      "Bash(npx:*)",
      "Bash(chmod:*)",
      "Bash(npm test)",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(mv:*)",
      "Bash(git push:*)",
      "Bash(npm test:*)",
      "Bash(.c8rc.json)",
      "Bash(NODE_ENV=test node --test src/test/services/claude-code.test.js)",
      "Bash(NODE_ENV=test node --test src/test/services/websocket.test.js)",
      "Bash(NODE_ENV=test node --test src/test/routes/routes-coverage.test.js)",
      "Bash(NODE_ENV=test node --test src/test/routes/index.test.js)",
      "Bash(NODE_ENV=test node --test src/test/services/websocket-v2.test.js)",
      "Bash(NODE_ENV=test timeout 60s node --test src/test/services/claude-code.test.js)",
      "Bash(sed:*)",
      "Bash(NODE_ENV=test node --test src/test/services/websocket-v2-enhanced.test.js)",
      "Bash(NODE_ENV=test npx c8 --reporter=text --include=\"**/websocket-v2.js\" node --test src/test/services/websocket-v2*.test.js)",
      "Bash(NODE_ENV=test npx c8 --reporter=text node --test src/test/services/websocket-v2*.test.js)",
      "Bash(NODE_ENV=test npx c8 --include=\"src/services/websocket-v2.js\" --reporter=text node --test src/test/services/websocket-v2*.test.js)",
      "Bash(NODE_ENV=test c8 --reporter=text --reporter=lcov node --test src/test/services/websocket-v2-targeted.test.js src/test/services/websocket-v2-enhanced.test.js src/test/services/claude-code.test.js)",
      "Bash(NODE_ENV=test c8 --reporter=text node --test src/test/index-execution.test.js)",
      "Bash(NODE_ENV=test npx c8 --reporter=text node --test src/test/index-execution.test.js)",
      "Bash(NODE_ENV=test node --test src/test/index.test.js src/test/index-execution.test.js)",
      "Bash(NODE_ENV=test npx c8 --reporter=text node --test src/test/index.test.js)",
      "Bash(NODE_ENV=test npx c8 --reporter=text node --test src/test/**/*.test.js)",
      "Bash(NODE_ENV=test c8 --reporter=lcov --reporter=text node --test src/test/**/*.test.js)",
      "Bash(NODE_ENV=test npx c8 --reporter=lcov --reporter=text node --test src/test/**/*.test.js)",
      "Bash(NODE_ENV=test npx c8 --reporter=text node --test 'src/test/**/*.test.js')",
      "Bash(NODE_ENV=test npx c8 --reporter=text --include='src/index.js' node --test src/test/index.test.js)",
      "Bash(NODE_ENV=test node --test src/test/**/*.test.js)",
      "Bash(NODE_ENV=test node --test src/test/index-execution.test.js)",
      "Bash(NODE_ENV=test timeout 5 node --test src/test/index-execution.test.js)",
      "Bash(NODE_ENV=test npx c8 --include='src/index.js' node --test src/test/index-execution.test.js)",
      "Bash(NODE_ENV=test npx c8 --reporter=text node --test 'src/test/index-execution.test.js' 'src/test/index.test.js')",
      "Bash(NODE_ENV=test node --test src/test/index.test.js)",
      "Bash(cat:*)",
      "Bash(NODE_ENV=test npx c8 --all --include='src/**/*.js' --exclude='src/**/*.test.js' --reporter=text node --test src/test/**/*.test.js)",
      "Bash(NODE_ENV=test c8 --all --include='src/**/*.js' --exclude='src/**/*.test.js' --exclude='src/test/**/*.js' --reporter=text node --test src/test/**/*.test.js)",
      "Bash(NODE_ENV=test npx c8 --all --include='src/**/*.js' --exclude='src/**/*.test.js' --exclude='src/test/**/*.js' --reporter=text node --test src/test/**/*.test.js)",
      "Bash(NODE_ENV=test npx c8 --all --include='src/**/*.js' --exclude='src/**/*.test.js' --exclude='src/test/**/*.js' node --test src/test/index.test.js)",
      "Bash(NODE_ENV=test npx c8 node --test src/test/**/*.test.js)",
      "Bash(NODE_ENV=test npx c8 node --test src/test/index.test.js)",
      "Bash(NODE_ENV=test node --test --dry-run src/test/**/*.test.js)",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(npm run format:check:*)",
      "Bash(npm run test:coverage:*)",
      "Bash(NODE_ENV=test c8 --reporter=text node --test src/test/**/*.test.js)",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nrefactor: Complete server code review with modular architecture and comprehensive test coverage\n\n## Code Review and Cleanup\n- Remove duplicate WebSocket implementation (websocket-v2.js) consolidating to single websocket.js\n- Extract monolithic server class into focused configuration modules:\n  - MiddlewareConfig: Express middleware setup and authentication\n  - ServerStartup: Auth token generation, service discovery, and startup display\n  - TLSConfig: TLS certificate management and configuration\n  - ServerConfig: Centralized configuration management\n- Standardize on Node.js native test runner (remove Jest configuration)\n- Consolidate configuration files and remove duplicates (.prettierrc, .husky)\n- Create centralized constants and error utilities for consistency\n\n## Test Coverage Improvements  \n- Add comprehensive test suites achieving high coverage:\n  - Server integration tests: startup/shutdown lifecycle, routes, error handling\n  - Configuration module tests: all new extracted config classes\n  - Utility module tests: ValidationUtils (97.18%), errors (100%), TLS (94.92%)\n- Update .c8rc.json to exclude non-logic files from coverage requirements\n- Fix test path references in CI configuration\n\n## Code Quality Enhancements\n- Extract duplicate validation logic into reusable ValidationUtils class\n- Create standardized error handling with AppError class and HTTP response utilities\n- Add comprehensive JSDoc documentation throughout\n- Improve separation of concerns with focused, single-responsibility modules\n- Maintain backward compatibility while improving internal structure\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": []
  }
}